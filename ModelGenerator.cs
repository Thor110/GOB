public class ModelGenerator
{
    private static Random random = new Random();
    public static void GenerateModel(int numVertices, int numFaces, int scale, string filePath)
    {
        List<Mesh> meshes = GenerateRandom3DModel(numVertices, numFaces, scale);
        WriteObjFile(filePath, meshes);
    }
    public static void WriteObjFile(string filePath, List<Mesh> meshes)
    {
        using (StreamWriter writer = new StreamWriter(filePath))
        {
            writer.WriteLine("# OBJ file generated by C# - The Gallery of Babel");

            foreach (Mesh mesh in meshes)
            {
                writer.WriteLine("o " + mesh.Name);

                foreach (Vertex vertex in mesh.Vertices)
                {
                    writer.WriteLine("v " + vertex.X + " " + vertex.Y + " " + vertex.Z);
                }

                for (int i = 0; i < mesh.Vertices.Count - 2; i++)
                {
                    writer.WriteLine("f " + (i + 1) + " " + (i + 2) + " " + 1);
                }
            }
        }
    }
    public static List<Mesh> GenerateRandom3DModel(int numVertices, int numFaces, int scale)
    {
        List<Vertex> vertices = new List<Vertex>();

        for (int i = 0; i < numVertices; i++)
        {
            Vertex vertex = new Vertex(
                random.NextDouble() * scale - scale / 2,
                random.NextDouble() * scale - scale / 2,
                random.NextDouble() * scale - scale / 2
            );
            vertices.Add(vertex);
        }

        List<Mesh> meshes = new List<Mesh>();

        List<Vertex> faceVertices = new List<Vertex>();

        for (int i = 0; i < numVertices; i++)
        {
            faceVertices.Add(vertices[i]);
        }

        for (int i = 0; i < numFaces; i++)
        {
            int v1 = random.Next(0, numVertices);
            int v2 = random.Next(0, numVertices);
            int v3 = random.Next(0, numVertices);

            faceVertices.Add(vertices[v1]);
            faceVertices.Add(vertices[v2]);
            faceVertices.Add(vertices[v3]);
        }

        meshes.Add(new Mesh(faceVertices, "Random Mesh"));

        return meshes;
    }
}
public class Vertex
{
    public double X { get; set; }
    public double Y { get; set; }
    public double Z { get; set; }

    public Vertex(double x, double y, double z)
    {
        X = x;
        Y = y;
        Z = z;
    }
}
public class Face
{
    public int Vertex1 { get; set; }
    public int Vertex2 { get; set; }
    public int Vertex3 { get; set; }

    public Face(int vertex1, int vertex2, int vertex3)
    {
        Vertex1 = vertex1;
        Vertex2 = vertex2;
        Vertex3 = vertex3;
    }
}
public class Mesh
{
    public List<Vertex> Vertices { get; set; }
    public string Name { get; set; }

    public Mesh(List<Vertex> vertices, string name)
    {
        Vertices = vertices;
        Name = name;
    }
}